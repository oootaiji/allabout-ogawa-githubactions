name: production
on: [push]



jobs:
  test:
    runs-on: ubuntu-20.04
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
          MYSQL_USER: test
          MYSQL_PASSWORD: test
          options: --health-cmd "mysqladmin ping -h localhost" --health-interval 20s --health-timeout 10s --health-retries 10

    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: build app for test
        uses: ./.github/actions/build
        with:
            APP_ENV: ${{ secrets.PRO_APP_ENV }}
            APP_KEY: ${{ secrets.PRO_APP_KEY }}
            APP_ENV_NAME: ".env.prd"
            COMPOSER_INSTALL_NO_DEV: "false"
      

      - name: wait for phpunit
        run: |
          docker
      - name: phpunit
        id: phpunit
        run: |
          if [ ! -d ./test-results ]; then mkdir ./test-results; fi
          ./vendor/bin/phpunit -d memory_limit=1G --stderr
        working-directory: src



  deploy:
    runs-on: ubuntu-20.04
    needs: test
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: build app for deploy
        uses: ./.github/actions/build
        with:
            APP_ENV: ${{ secrets.PRO_APP_ENV }}
            APP_KEY: ${{ secrets.PRO_APP_KEY }}
            APP_ENV_NAME: ".env.prd"
            COMPOSER_INSTALL_NO_DEV: "true"
        

      - name: gcloud auth
        run: |
          echo ${{ secrets.GKE_SERVICE_ACCOUNT_KEY }} > $HOME/allabout-kubernetes-service-account.json
          gcloud auth activate-service-account --key-file $HOME/allabout-kubernetes-service-account.json
          gcloud auth configure-docker us-east1-docker.pkg.dev
        working-directory: src
      - name: setup docker buildx
        uses: docker/setup-buildx-action@v2.2.1
      - name: setup docker env
        run: |
          echo "${{ env.GITHUB_ACTION_REPOSITORY }}"
          echo "IMAGE_TAG=${{ github.sha }}-${{ github.run_number }}" >> $GITHUB_ENV
      - name: docker build and push
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          push: true
          file: cd/${{ secrets.PRO_APP_ENV }}/php/Dockerfile
          build-args: |
            APP_ENV=${{ secrets.PRO_APP_ENV }}
            APP_PATH=/var/www/${{ env.GITHUB_ACTION_REPOSITORY }}
          tags: |
            ${{ env.GITHUB_ACTION_REPOSITORY }} us-east1-docker.pkg.dev/o-taiji/${{ env.GITHUB_ACTION_REPOSITORY }}/app:latest
            ${{ env.GITHUB_ACTION_REPOSITORY }} us-east1-docker.pkg.dev/o-taiji/${{ env.GITHUB_ACTION_REPOSITORY }}/app:${{ env.IMAGE_TAG }}
      - name: set gke config
        run: |
          gcloud config set project o-taiji
          gcloud config set compute/region us-west1
          gcloud container clusters get-credentials ${{ env.GITHUB_ACTION_REPOSITORY }}
      - name: set gke env
        run: | 
          echo "export DEPLOYMENT_CONTAINER_IMAGE=us-east1-docker.pkg.dev/o-taiji/${{ env.GITHUB_ACTION_REPOSITORY }}/app:${{ env.IMAGE_TAG }}" >> $BASH_ENV
          echo "export CERT_DOMAIN=githubactions.ogawa.allabout.oootaiji.com" >> $BASH_ENV
          echo "export INGRESS_STATIC_IP=${{ env.GITHUB_ACTION_REPOSITORY }}-ip" >> $BASH_ENV
          echo "export NAMESPACE=${{ env.GITHUB_ACTION_REPOSITORY }}" >> $BASH_ENV
          source $BASH_ENV
      - name: deploy gke
        run: |
          cd cd/${{ secrets.PRO_APP_ENV }}/manifest
          envsubst < namespace.yaml > $HOME/namespace.yaml
          envsubst < service.yaml > $HOME/service.yaml
          envsubst < deployment.yaml > $HOME/deployment.yaml
          envsubst < ingress.yaml > $HOME/ingress.yaml
          envsubst < cert.yaml > $HOME/cert.yaml
          envsubst < pod-disruption-budget.yaml > $HOME/pod-disruption-budget.yaml
          kubectl apply -f $HOME/cert.yaml
          kubectl apply -f $HOME/deployment.yaml
          kubectl apply -f $HOME/service.yaml
          kubectl apply -f $HOME/ingress.yaml
          kubectl apply -f $HOME/pod-disruption-budget.yaml
      - name: confirm deploy
        run: |
          kubectl rollout status deployment web


